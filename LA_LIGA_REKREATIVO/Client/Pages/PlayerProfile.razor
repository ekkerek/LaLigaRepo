@page "/playerProfile/{Id:int}"
@using LA_LIGA_REKREATIVO.Client.Services
@using LA_LIGA_REKREATIVO.Shared.Dto
@using LA_LIGA_REKREATIVO.Client.Server;
@inject Server Server
@inject FileService _fileService;


<div>
    @if (playerStats.Player is not null)
    {
        <div class="klasa" style="display: flex; justify-content: center;">
            <img style="height: 35vh;margin-bottom: 20px; position: relative;" src="@_fileService.GetImagePath(player.Picture)" />
        </div>
        <GridRow>
            <GridCol Span="16" Style="font-weight: 700; font-size: medium">First name:</GridCol>
            <GridCol Span="8" Style="font-size: medium">@playerStats.Player.FirstName</GridCol>
        </GridRow>

        <GridRow>
            <GridCol Span="16" Style="font-weight: 700;font-size: medium">Last name:</GridCol>
            <GridCol Span="8" Style="font-size: medium">@playerStats.Player.LastName</GridCol>
        </GridRow>

        <GridRow>
            <GridCol Span="16" Style="font-weight: 700;font-size: medium">Team:</GridCol>
            <GridCol Span="8" Style="font-size: medium">@playerStats.Team.Name</GridCol>
        </GridRow>
        <GridRow>
            <GridCol Span="16" Style="font-weight: 700;font-size: medium">Fantasy points:</GridCol>
            <GridCol Span="8" Style="font-size: medium">
                @playerStats.TotalPoints
            </GridCol>

        </GridRow>

        <Divider Style="margin: 12px;" />

        <GridRow>
            <GridCol Span="16" Style="font-weight: 700;font-size: medium">Total Matches:</GridCol>
            <GridCol Span="8" Style="font-size: medium">@playerStats.TotalMatches</GridCol>
        </GridRow>
        <GridRow>
            <GridCol Span="16" Style="font-weight: 700;font-size: medium">Wins:</GridCol>
            <GridCol Span="8" Style="font-size: medium">@playerStats.Wins</GridCol>
        </GridRow>
        <GridRow>
            <GridCol Span="16" Style="font-weight: 700;font-size: medium">Draws:</GridCol>
            <GridCol Span="8" Style="font-size: medium">@playerStats.Draws</GridCol>
        </GridRow>
        <GridRow>
            <GridCol Span="16" Style="font-weight: 700;font-size: medium">Losts:</GridCol>
            <GridCol Span="8" Style="font-size: medium">@playerStats.Losts</GridCol>
        </GridRow>

        <Divider Style="margin: 12px;" />

        <GridRow>
            <GridCol Span="16" Style="font-weight: 700;font-size: medium">Goals:</GridCol>
            <GridCol Span="8" Style="font-size: medium">@playerStats.Goals</GridCol>
        </GridRow>
        <GridRow>
            <GridCol Span="16" Style="font-weight: 700;font-size: medium">Assists:</GridCol>
            <GridCol Span="8" Style="font-size: medium">@playerStats.Assists</GridCol>
        </GridRow>
        <GridRow>
            <GridCol Span="16" Style="font-weight: 700;font-size: medium">Own goals:</GridCol>
            <GridCol Span="8" Style="font-size: medium">@playerStats.OwnGoals</GridCol>
        </GridRow>
        <GridRow>
            <GridCol Span="16" Style="font-weight: 700;font-size: medium">Goals Per Match:</GridCol>
            <GridCol Span="8" Style="font-size: medium">@playerStats.GoalsPerMatch.ToString("F1")</GridCol>
        </GridRow>
        <GridRow>
            <GridCol Span="16" Style="font-weight: 700;font-size: medium">WinPerMatch:</GridCol>
            <GridCol Span="8" Style="font-size: medium">@playerStats.WinPerMatch.ToString("F1") %</GridCol>
        </GridRow>

        <Divider Style="margin: 12px;" />

        <GridRow>
            <GridCol Span="16" Style="font-weight: 700;font-size: medium">Yellow Cards:</GridCol>
            <GridCol Span="8" Style="font-size: medium">@playerStats.YellowCards</GridCol>
        </GridRow>
        <GridRow>
            <GridCol Span="16" Style="font-weight: 700;font-size: medium">Red Cards:</GridCol>
            <GridCol Span="8" Style="font-size: medium">@playerStats.RedCards</GridCol>
        </GridRow>

        <Divider Style="margin: 12px;" />

        <GridRow>
            <GridCol Span="16" Style="font-weight: 700;font-size: medium">Missed Penalty:</GridCol>
            <GridCol Span="8" Style="font-size: medium">@playerStats.MissedPenalty</GridCol>
        </GridRow>
        <GridRow>
            <GridCol Span="16" Style="font-weight: 700;font-size: medium">Missed From 10m:</GridCol>
            <GridCol Span="8" Style="font-size: medium">@playerStats.Missed10meter</GridCol>
        </GridRow>

        @if (playerStats.Player.IsGk)
        {
            <Divider Style="margin: 12px;" />

            <GridRow>
                <GridCol Span="16" Style="font-weight: 700;font-size: medium">Clean Sheets:</GridCol>
                <GridCol Span="8" Style="font-size: medium">@playerStats.CleanSheetGK</GridCol>
            </GridRow>
            <GridRow>
                <GridCol Span="16" Style="font-weight: 700;font-size: medium">Saved Penalties:</GridCol>
                <GridCol Span="8" Style="font-size: medium">@playerStats.SavedFromPenaltyGK</GridCol>
            </GridRow>

            <GridRow>
                <GridCol Span="16" Style="font-weight: 700;font-size: medium">Saved From 10 meter:</GridCol>
                <GridCol Span="8" Style="font-size: medium">@playerStats.SavedFrom10meterGK</GridCol>
            </GridRow>
        }
    }
</div>

<style>
    .klasa {
        position: relative;
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .klasa::before {
            content: "";
            background-image: url("./358511247_150359871398221_6497914246200068198_n.jpg");
            background-size: cover;
            position: absolute;
            top: 0px;
            right: 0px;
            bottom: 0px;
            left: 0px;
            opacity: 0.25;
        }
</style>

@code {
    [Parameter] public int Id { get; set; }
    private PlayerDto player = new();
    //private List<TeamDto> teams = new();
    private PlayerStatsDto playerStats = new();

    protected async override Task OnParametersSetAsync()
    {
        player = await Server.Players.Get(Id);
        //var teamsResult = await Server.Teams.Get();
        //teams = teamsResult.ToList();
        playerStats = await Server.Players.GetPlayerStats(Id);
    }

    // protected async override Task OnInitializedAsync()
    // {
    //     player = await Server.Players.Get(Id);
    //     var teamsResult = await Server.Teams.Get();
    //     teams = teamsResult.ToList();
    //     playerStats = await Server.Players.GetPlayerStats(Id);
    //     base.OnInitialized();
    // }
}
