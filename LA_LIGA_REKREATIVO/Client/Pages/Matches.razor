@page "/matches"
@using LA_LIGA_REKREATIVO.Shared
@using LA_LIGA_REKREATIVO.Shared.Dto;
@using LA_LIGA_REKREATIVO.Client.Server;
@using System.Net.Http.Headers
@inject Server Server;
@inject NavigationManager Navigation
@inject HttpClient Http

<div class="rz-p-12 rz-text-align-center">
    <Button OnClick="@OnPrev" Shape="@ButtonShape.Circle" Icon="@IconType.Outline.Left" />
    <RadzenDatePicker Style="width: 150px;" ShowTime=false DateFormat="dd-MM-yyyy" Change="OnChangeDate" @bind-Value=@currentDate Name="RadzenDatePickerBindValue" />
    <Button OnClick="@OnNext" Shape="@ButtonShape.Circle" Icon="@IconType.Outline.Right" />
</div>

<AntList DataSource="@matches" TItem="MatchDto">
    <ListItem OnClick="()=>SelectMatchDetails(context.Id)">
        <ListItemMeta>
            <TitleTemplate>
                <GridRow>
                    <GridCol Style="font-weight:500" Span="20">@context.HomeTeam.Name</GridCol>
                        <GridCol Style="font-weight:500" Span="4">@context.HomeTeamGoals</GridCol>
                        <GridCol Style="font-weight:500" Span="20">@context.AwayTeam.Name</GridCol>
                        <GridCol Style="font-weight:500" Span="4">@context.AwayTeamGoals</GridCol>
                    </GridRow>
                </TitleTemplate>
            </ListItemMeta>
        </ListItem>
    </AntList>

    @code {
    List<MatchDto> matches = new List<MatchDto>();
    bool allowVirtualization = true;
    DateTime currentDate = DateTime.Now;

    public void SelectMatchDetails(int id)
    {
        Navigation.NavigateTo($"/matchDetails/{id}");
    }

    protected override async Task OnInitializedAsync()
    {
        var result = await Server.Matches.GetByDate(DateTime.Now);
        matches = result.ToList();
    }

    async Task OnNext()
    {
        currentDate = currentDate.AddDays(1);
        var result = await Server.Matches.GetByDate(currentDate);
        matches = result.ToList();
    }

    async Task OnPrev()
    {
        currentDate = currentDate.AddDays(-1);
        var result = await Server.Matches.GetByDate(currentDate);
        matches = result.ToList();
    }

    async Task OnChangeDate()
    {
        var result = await Server.Matches.GetByDate(currentDate);
        matches = result.ToList();
    }
}
