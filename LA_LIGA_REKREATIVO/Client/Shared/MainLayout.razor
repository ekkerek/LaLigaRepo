@inherits LayoutComponentBase
@inject NavigationManager Navigation
@inject IJSRuntime JS

<div class="page" style="height: 100dvh; min-height: -webkit-fill-available;">
    <div class="sidebar">
        <NavMenu />
    </div>

    <Layout>
        <Content Style="overflow-y: auto;">
            @*             <div class="top-row px-4">
            <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
            </div> *@

            <article style="width: 100%;" class="content px-4">
                @Body
            </article>
        </Content>
        <Footer Style="padding: 4px;display: flex; justify-content:space-evenly">
            <Button Style="background-color: transparent; height: 48px; border: 0px; padding: 4px; font-size: 12px; " OnClick="NavigateToHome">
                <div style="display:flex; flex-direction: column;">
                    <span>
                        <img style="max-height: 24px;max-width: 24px" src="./home.png" />
                    </span>

                    <span>Home</span>
                </div>
            </Button>
            <Button Style="background-color: transparent; height: 48px; border: 0px; padding: 4px; font-size: 12px; " OnClick="NavigateToMatches">
                <div style="display:flex; flex-direction: column;">
                    <span style="display:flex; justify-content: center">
                        <img style="max-height: 24px;max-width: 24px" src="./football-field.png" />
                    </span>
                    <span>Matches</span>
                </div>
            </Button>
            <Button Style="background-color: transparent; height: 48px; border: 0px; padding: 4px; font-size: 12px; " OnClick="NavigateToStandings">
                <div style="display:flex; flex-direction: column;">
                    <span style="display:flex; justify-content: center">
                        <img style="max-height: 24px; max-width: 24px" src="./trophy.png" />
                    </span>
                    <span>Standings</span>
                </div>
            </Button>
            <Button Style="background-color: transparent; height: 48px; border: 0px; padding: 4px; font-size: 12px; " OnClick="NavigateTodreamTeam">
                <div style="display:flex; flex-direction: column;">
                    <span style="display:flex; justify-content: center">
                        <img style="max-height: 24px;max-width: 24px" src="./star.png" />
                    </span>

                    <span>Dream team</span>
                </div>
            </Button>
            <Button Style="background-color: transparent; height: 48px; border: 0px; padding: 4px; font-size: 12px; " OnClick="NavigateToStats">
                <div style="display:flex; flex-direction: column;">
                    <span style="display:flex; justify-content: center">
                        <img style="max-height: 24px;max-width: 24px" src="./stats.png" />
                    </span>
                    <span>Stats</span>
                </div>
            </Button>
        </Footer>

    </Layout>

</div>

@*
<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>

</div> *@
<RadzenComponents />

@code {

    private void NavigateToHome()
    {
        Navigation.NavigateTo($"/");
    }

    private void NavigateTodreamTeam()
    {
        Navigation.NavigateTo($"/dreamteam");
    }

    private void NavigateToMatches()
    {
        Navigation.NavigateTo($"/matches");

    }

    private void NavigateToStandings()
    {
        Navigation.NavigateTo($"/standings");

    }
    private void NavigateToStats()
    {
        Navigation.NavigateTo($"/stats");

    }

    //Google analytics

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            TrackPageView();
            Navigation.LocationChanged += OnLocationChanged;
        }
    }

    private void TrackPageView()
    {
        var pagePath = Navigation.ToBaseRelativePath(Navigation.Uri);
        JS.InvokeVoidAsync("gtag", "config", "G-KLB6LSEJFJ", new { page_path = "/" + pagePath });
    }

    private void OnLocationChanged(object sender, Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs e)
    {
        TrackPageView();
    }

    public void Dispose()
    {
        Navigation.LocationChanged -= OnLocationChanged;
    }
}
