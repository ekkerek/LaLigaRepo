@using LA_LIGA_REKREATIVO.Client.Server;
@using LA_LIGA_REKREATIVO.Client.Shared.Edit
@using LA_LIGA_REKREATIVO.Shared.Dto;
@inject Server Server;
@inject IMessageService MessageService

@if (showAddTeamModal)
{
    <AddTeam CloseModal="CloseAddTeamModal"></AddTeam>
}

@if (showEditTeamModal)
{
    <EditTeam Id=@Id CloseModal="CloseEditTeamModal"></EditTeam>
}

<Table TItem="TeamDto" DataSource="@teams">
    <PropertyColumn Sortable Filterable Property="c=>c.Id">
        <a>@context.Id</a>
    </PropertyColumn>
    <PropertyColumn Sortable Filterable Property="c=>c.Name">
        <a>@context.Name</a>
    </PropertyColumn>
    <PropertyColumn Sortable Filterable Property="c=>c.ParticipantOf"></PropertyColumn>
    <ActionColumn Title="Edit">
        <Space>
            <SpaceItem><Button Danger OnClick="()=>Edit(context.Id)">Edit</Button></SpaceItem>
        </Space>
    </ActionColumn>
    <ActionColumn Title="Delete">
        <Space>
            <SpaceItem>
                <Popconfirm Title="Are you sure delete this team?"
                            OnConfirm="() => Delete(context)">
                    <Button Danger>Delete</Button>
                </Popconfirm>
            </SpaceItem>
        </Space>
    </ActionColumn>
</Table>
<Button OnClick="OpenAddTeamModal">Add new team</Button>

@code {
    private IEnumerable<TeamDto> teams = Enumerable.Empty<TeamDto>();
    private int Id { get; set; }
    private bool showEditTeamModal;
    private bool showAddTeamModal;

    protected async override Task OnInitializedAsync()
    {
        teams = await Server.Teams.Get();
        base.OnInitialized();
    }

    #region AddTeam
    private void OpenAddTeamModal()
    {
        showAddTeamModal = true;
    }

    private async void CloseAddTeamModal()
    {
        teams = await Server.Teams.Get();
        showAddTeamModal = false;
        StateHasChanged();
    }
    #endregion

    #region EditTeam
    private void Edit(int id)
    {
        Id = id;
        showEditTeamModal = true;
    }

    private async void CloseEditTeamModal()
    {
        teams = await Server.Teams.Get();
        showEditTeamModal = false;
        StateHasChanged();
    }
    #endregion

    private async void Delete(TeamDto team)
    {
        await Server.Teams.Delete(team.Id);
        _ = MessageService.Success($"Team {team.Name} is deleted.");
        teams = await Server.Teams.Get();
        StateHasChanged();
    }
}
