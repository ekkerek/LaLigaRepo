@using LA_LIGA_REKREATIVO.Client.Server;
@using LA_LIGA_REKREATIVO.Client.Shared.Edit
@using LA_LIGA_REKREATIVO.Shared.Dto;
@inject Server Server;
@inject IMessageService MessageService

@if (showAddLeagueModal)
{
    <AddLeague CloseModal="CloseAddLeagueModal"></AddLeague>
}

@if (showEditLeagueModal)
{
    <EditLeague Id=@Id CloseModal="CloseEditLeagueModal"></EditLeague>
}

<Table TItem="LeagueDto" DataSource="@leagues">
    <PropertyColumn Sortable Filterable Property="c=>c.Id">
        <a>@context.Id</a>
    </PropertyColumn>
    <PropertyColumn Sortable Filterable Property="c=>c.Name">
        <a>@context.Name</a>
    </PropertyColumn>
    <PropertyColumn Property="c=>c.Year"></PropertyColumn>
    <ActionColumn Title="Edit">
        <Space>
            <SpaceItem><Button Danger OnClick="()=>Edit(context.Id)">Edit</Button></SpaceItem>
        </Space>
    </ActionColumn>
    <ActionColumn Title="Delete">
        <Space>
            <SpaceItem>
                <Popconfirm Title="Are you sure delete this league?"
                            OnConfirm="() => Delete(context)">
                    <Button Danger>Delete</Button>
                </Popconfirm>
            </SpaceItem>
        </Space>
    </ActionColumn>
</Table>
<Button OnClick="OpenAddLeagueModal">Add new league</Button>

@code {
    private IEnumerable<LeagueDto> leagues = Enumerable.Empty<LeagueDto>();
    private int Id { get; set; }
    private bool showEditLeagueModal;
    private bool showAddLeagueModal;

    protected async override Task OnInitializedAsync()
    {
        leagues = await Server.Leagues.Get();
        base.OnInitialized();
    }

    #region AddLeague
    private void OpenAddLeagueModal()
    {
        showAddLeagueModal = true;
    }

    private async void CloseAddLeagueModal()
    {
        leagues = await Server.Leagues.Get();
        showAddLeagueModal = false;
        StateHasChanged();
    }
    #endregion

    private async void Delete(LeagueDto league)
    {
        await Server.Leagues.Delete(league);
        _ = MessageService.Success($"League {league.Name} is deleted.");
        leagues = await Server.Leagues.Get();
        StateHasChanged();
    }

    #region EditLeague
    private void Edit(int id)
    {
        Id = id;
        showEditLeagueModal = true;
    }

    private async void CloseEditLeagueModal()
    {
        leagues = await Server.Leagues.Get();
        showEditLeagueModal = false;
        StateHasChanged();
    }
    #endregion
}
