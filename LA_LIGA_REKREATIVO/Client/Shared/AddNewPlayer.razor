@using LA_LIGA_REKREATIVO.Client.Server;
@using LA_LIGA_REKREATIVO.Shared.Dto;
@inject Server Server;

<Form Model="player"
      OnFinish="OnFinish"
      OnFinishFailed="OnFinishFailed"
      LabelColSpan="8"
      WrapperColSpan="16">
    <FormItem Label="First Name">
        <Input @bind-Value="context.FirstName" />
    </FormItem>
    <FormItem Label="Last Name">
        <Input @bind-Value="@context.LastName" />
    </FormItem>
    <FormItem WrapperColOffset="8" WrapperColSpan="16" Label="Team">
        <SimpleSelect DefaultValue="lucy" Style="width:120px;" OnSelectedItemChanged="handleChange">
            <SelectOptions>
                @foreach (var team in teams)
                {
                    <SimpleSelectOption Value="@team.Id.ToString()" Label="@team.Name"></SimpleSelectOption>
                }

            </SelectOptions>
        </SimpleSelect>
    </FormItem>
    <FormItem WrapperColOffset="8" WrapperColSpan="16">
        <Button Type="@ButtonType.Primary" HtmlType="submit">
            Submit
        </Button>
    </FormItem>
</Form>

@code {
    public PlayerDto player = new PlayerDto();
    public List<TeamDto> teams = new List<TeamDto>();
    public int selectedTeamId = 0;

    protected async override Task OnInitializedAsync()
    {
        var aa = await Server.Teams.Get();
        teams = aa.ToList();
        base.OnInitialized();
    }

    private async Task OnFinish(EditContext editContext)
    {

        var aa = await Server.Players.Add(player);
    }

    private void OnFinishFailed(EditContext editContext)
    {
        ///Console.WriteLine($"Failed:{JsonSerializer.Serialize(player.LastName)}");
    }

    void handleChange(string value)
    {
        selectedTeamId = Int32.Parse(value);
        player.TeamId = teams.FirstOrDefault(x => x.Id == selectedTeamId).Id;
        //player.Team = teams.FirstOrDefault(x => x.Id == selectedTeamId);
        Console.WriteLine(value);
    }

    void handleItemsChange(IEnumerable<string> value)
    {
        Console.WriteLine(value);
    }
}
