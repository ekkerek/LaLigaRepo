@using LA_LIGA_REKREATIVO.Client.Server;
@using LA_LIGA_REKREATIVO.Shared.Dto;
@inject Server Server;
@inject IMessageService MessageService

<Modal Title="Add new player"
       Visible="true"
       OnOk="@HandleOk"
       OnCancel="@HandleCancel">
    <Form Model="player"
          OnFinish="OnFinish"
          OnFinishFailed="OnFinishFailed"
          LabelColSpan="8"
          WrapperColSpan="16"
    @ref="addPlayerForm">

        <FormItem Label="First Name">
            <Input @bind-Value="context.FirstName" />
        </FormItem>
        <FormItem Label="Last Name">
            <Input @bind-Value="@context.LastName" />
        </FormItem>
        <FormItem Label="Team">
            <SimpleSelect DefaultValue="lucy" OnSelectedItemChanged="SelectTeam">
                <SelectOptions>
                    @foreach (var team in teams)
                    {
                        <SimpleSelectOption Value="@team.Id.ToString()" Label="@team.Name"></SimpleSelectOption>
                    }
                </SelectOptions>
            </SimpleSelect>
        </FormItem>
    </Form>
</Modal>

@code {
    [Parameter] public EventCallback CloseModal { get; set; }
    private Form<PlayerDto> addPlayerForm = null!;
    private PlayerDto player = new();
    private List<TeamDto> teams = new();
    private int selectedTeamId = 0;
    private bool submitting;

    protected async override Task OnInitializedAsync()
    {
        var result = await Server.Teams.Get();
        teams = result.ToList();
        base.OnInitialized();
    }

    public async Task HandleOk(MouseEventArgs e)
    {
        submitting = true;
        addPlayerForm.Submit();
    }

    private async Task HandleCancel(MouseEventArgs e)
    {
        await CloseModal.InvokeAsync();
    }

    private async Task OnFinish(EditContext editContext)
    {
        var result = await Server.Players.Add(player);
        if (result)
            _ = MessageService.Success("New player is added.");

        await CloseModal.InvokeAsync();
    }

    private void OnFinishFailed(EditContext editContext)
    {
        ///Console.WriteLine($"Failed:{JsonSerializer.Serialize(player.LastName)}");
    }

    private void SelectTeam(string value)
    {
        selectedTeamId = Int32.Parse(value);
        player.TeamId = teams.FirstOrDefault(x => x.Id == selectedTeamId).Id;
    }
}
