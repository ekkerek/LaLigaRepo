@using LA_LIGA_REKREATIVO.Client.Services
@using LA_LIGA_REKREATIVO.Shared
@using LA_LIGA_REKREATIVO.Shared.Dto;
@using LA_LIGA_REKREATIVO.Client.Server;
@using System.Net.Http.Headers
@using Newtonsoft.Json
@inject Server Server;
@inject IMessageService MessageService
@inject HttpClient _httpClient;
@inject FileService _fileService;

<Modal Title="Add new league"
       Visible="true"
       OnOk="@HandleOk"
       OnCancel="@HandleCancel">
    <Form Model="league"
          OnFinish="OnFinish"
          OnFinishFailed="OnFinishFailed"
          LabelColSpan="8"
          WrapperColSpan="16"
          @ref="@addLeagueForm">

        <FormItem Label="Name">
            <Input @bind-Value="context.Name" />
        </FormItem>
        <FormItem Label="Year">
            <Input @bind-Value="context.Year" />
        </FormItem>
                <FormItem Label="Coefficient">
            <Input @bind-Value="context.Coefficient" />
        </FormItem>
        <FormItem Label="Is Overall League">
            <Switch @bind-Checked="@context.IsOverallLeague" />
        </FormItem>
        <FormItem>
            <InputFile OnChange="OnInputFileChange" />
        </FormItem>
    </Form>
</Modal>


@code {
    [Parameter] public EventCallback CloseModal { get; set; }
    private Form<LeagueDto> addLeagueForm = null!;
    private LeagueDto league = new();
    private bool submitting { get; set; }
    private List<UploadResult> uploadResults = new();

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        uploadResults = await _fileService.UploadFile(e);
    }

    public async Task HandleOk(MouseEventArgs e)
    {
        submitting = true;
        addLeagueForm.Submit();
    }

    private async Task HandleCancel(MouseEventArgs e)
    {
        await CloseModal.InvokeAsync();
    }

    private async Task OnFinish(EditContext editContext)
    {
        if (uploadResults.FirstOrDefault() is not null)
        {
            league.Logo = uploadResults.FirstOrDefault()?.StoredFileName;
        }
        var result = await Server.Leagues.Add(league);
        if (result)
            _ = MessageService.Success("New league is added.");

        await CloseModal.InvokeAsync();
    }

    private void OnFinishFailed(EditContext editContext)
    {
        ///Console.WriteLine($"Failed:{JsonSerializer.Serialize(player.LastName)}");
    }
}
