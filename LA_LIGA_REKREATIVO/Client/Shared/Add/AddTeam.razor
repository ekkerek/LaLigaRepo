@using LA_LIGA_REKREATIVO.Shared.Dto;
@using Newtonsoft.Json;
@using System.Net.Http.Headers;
@using LA_LIGA_REKREATIVO.Client.Server;
@inject Server Server
@inject IMessageService MessageService


<Modal Title="Create new team"
       Visible="true"
       OnOk="@HandleOk"
       OnCancel="@HandleCancel">
    <Form Model="team"
          OnFinish="OnFinish"
          OnFinishFailed="OnFinishFailed"
          LabelColSpan="8"
          WrapperColSpan="16"
          @ref="@addTeamForm">
        <FormItem Label="Select League">
            <Select Mode="multiple"
                    TItem="LeagueDto"
                    TItemValue="int?"
                    DataSource="@leagues"
                    LabelName="@nameof(LeagueDto.Name)"
                    ValueName="@nameof(LeagueDto.Id)"
                    Style="width: 200px"
                    Placeholder="Select leagues"
                    IgnoreItemChanges="false"
                    OnSelectedItemsChanged="OnSelectedLeagues"
                    AllowClear>
            </Select>
        </FormItem>
        <FormItem Label="Name">
            <Input @bind-Value="context.Name" />
        </FormItem>
        <FormItem Label="Logo">
            <Input @bind-Value="context.LogoSrc" />
        </FormItem>
    </Form>
</Modal>

@code {
    [Parameter] public EventCallback CloseModal { get; set; }
    private Form<TeamDto> addTeamForm = null!;
    private TeamDto team = new();
    private IEnumerable<LeagueDto> leagues = Enumerable.Empty<LeagueDto>();
    private HashSet<LeagueDto> selectedLeagues = new();
    private LeagueDto league = new();
    private bool submitting;

    protected override async Task OnInitializedAsync()
    {
        leagues = await Server.Leagues.Get();
    }

    public async Task HandleOk(MouseEventArgs e)
    {
        submitting = true;
        addTeamForm.Submit();
    }

    private async Task HandleCancel(MouseEventArgs e)
    {
        await CloseModal.InvokeAsync();
    }

    private async Task OnFinish(EditContext editContext)
    {
        team.Leagues.AddRange(selectedLeagues);
        var result = await Server.Teams.Add(team);
        if (result)
            _ = MessageService.Success("New team is added.");

        await CloseModal.InvokeAsync();
    }

    private void OnFinishFailed(EditContext editContext)
    {
        ///Console.WriteLine($"Failed:{JsonSerializer.Serialize(player.LastName)}");
    }

    private void OnSelectedLeagues(IEnumerable<LeagueDto> leagues)
    {
        selectedLeagues = leagues.ToHashSet();
    }
}
