@using LA_LIGA_REKREATIVO.Client.Services
@using LA_LIGA_REKREATIVO.Shared.Dto
@using LA_LIGA_REKREATIVO.Client.Server;

@inject Server Server
@inject NavigationManager Navigation
@inject FileService _fileService;

<Spin Spinning=loading>

    <Select TItem="LeagueDto"
            TItemValue="int?"
            DataSource="@leagues"
            DefaultValue="@defaultLeagueId"
            LabelName="@nameof(LeagueDto.Name)"
            ValueName="@nameof(PlayerDto.Id)"
            Style="width: 100%; padding-bottom: 12px;"
            Placeholder="Select a league"
            IgnoreItemChanges="false"
            OnSelectedItemChanged="OnSelectedLeague"
            AllowClear>
    </Select>

    @if (stats.Count() > 0)
    {
        <span style="display: flex; justify-content: center; font-size: large;font-weight: 600; margin-top: 1vh; background-color: lightgray ; position: relative; bottom: 6px;">Dream team</span>
        <div class="klasa" style="height: 45dvh;margin-bottom: 16px;">
            <GridRow style="height: 33%">
                <GridCol Style="display: flex;justify-content: center;align-items: center;" Span="12">
                    <div>
                        <div class="dream-team-containter">
                            <div class="dream-team-div">
                                <a @onclick="() => GoToProfilePage(stats.FirstOrDefault().Player.Id)">
                                    <img class="dream-team-img" src="@_fileService.GetImagePath(stats.FirstOrDefault().Player.Picture)" />
                                </a>

                            </div>
                        </div>
                        <div style="display: flex; justify-content: center; color: white; font-weight:600">@stats.FirstOrDefault().Player.FullName </div>
                        <div style="display: flex; justify-content: center; color: white; font-weight:600">@stats.FirstOrDefault().TotalPoints <Icon Style="position: relative; top: 4px;" Type="star" Theme="fill" /></div>
                    </div>
                </GridCol>
                <GridCol Style="display: flex;justify-content: center;align-items: center;" Span="12">
                    <div>
                        <div class="dream-team-containter">
                            <div class="dream-team-div">
                                <a @onclick="() => GoToProfilePage(stats.Skip(1).FirstOrDefault().Player.Id)">
                                    <img class="dream-team-img" src="@_fileService.GetImagePath(stats.Skip(1).FirstOrDefault().Player.Picture)" />
                                </a>

                            </div>
                        </div>
                        <div style="display: flex; justify-content: center; color: white; font-weight:600">@stats.Skip(1).FirstOrDefault().Player.FullName </div>
                        <div style="display: flex; justify-content: center; color: white; font-weight:600">@stats.Skip(1).FirstOrDefault().TotalPoints <Icon Style="position: relative; top: 4px;" Type="star" Theme="fill" /></div>
                    </div>
                </GridCol>
            </GridRow>
            <GridRow style="height: 33%">
                <GridCol Style="display: flex;justify-content: center;align-items: center;" Span="12">
                    <div>
                        <div class="dream-team-containter">
                            <div class="dream-team-div">
                                <a @onclick="() => GoToProfilePage(stats.Skip(2).FirstOrDefault().Player.Id)">
                                    <img class="dream-team-img" src="@_fileService.GetImagePath(stats.Skip(2).FirstOrDefault().Player.Picture)" />
                                </a>

                            </div>

                        </div>

                        <div style="display: flex; justify-content: center; color: white; font-weight:600">@stats.Skip(2).FirstOrDefault().Player.FullName </div>
                        <div style="display: flex; justify-content: center; color: white; font-weight:600">@stats.Skip(2).FirstOrDefault().TotalPoints <Icon Style="position: relative; top: 4px;" Type="star" Theme="fill" /></div>
                    </div>
                </GridCol>
                <GridCol Style="display: flex;justify-content: center;align-items: center;" Span="12">
                    <div>
                        <div class="dream-team-containter">
                            <div class="dream-team-div">
                                <a @onclick="() => GoToProfilePage(stats.Skip(3).FirstOrDefault().Player.Id)">
                                    <img class="dream-team-img" src="@_fileService.GetImagePath(stats.Skip(3).FirstOrDefault().Player.Picture)" />
                                </a>
                            </div>
                        </div>

                        <div style="display: flex; justify-content: center; color: white; font-weight:600">@stats.Skip(3).FirstOrDefault().Player.FullName </div>
                        <div style="display: flex; justify-content: center; color: white; font-weight:600">@stats.Skip(3).FirstOrDefault().TotalPoints <Icon Style="position: relative; top: 4px;" Type="star" Theme="fill" /></div>
                    </div>
                </GridCol>
            </GridRow>
            <GridRow style="height: 33%">
                <GridCol Style="display: flex;justify-content: center;align-items: center;" Span="24">
                    <div>
                        <div class="dream-team-containter">
                            <div class="dream-team-div">
                                <a @onclick="() => GoToProfilePage(stats.FirstOrDefault(x => x.Player.IsGk).Player.Id)">
                                    <img class="dream-team-img" src="@_fileService.GetImagePath(stats.FirstOrDefault(x => x.Player.IsGk).Player.Picture)" />
                                </a>
                            </div>
                        </div>
                        <div style="display: flex; justify-content: center; color: white; font-weight:600">@stats.FirstOrDefault(x => x.Player.IsGk).Player.FullName (GK)</div>
                        <div style="display: flex; justify-content: center; color: white; font-weight:600">@stats.FirstOrDefault(x => x.Player.IsGk).TotalPoints <Icon Style="position: relative; top: 4px;" Type="star" Theme="fill" /></div>
                    </div>
                </GridCol>
            </GridRow>
        </div>

        <span style="display: flex; justify-content: center; font-size: large;font-weight: 600; margin-top: 1vh; background-color: lightgray ; position: relative; bottom: 6px;">Subs</span>

        <AntList Class="demo-loadmore-list" DataSource="@statsSub" ItemLayout="ListItemLayout.Horizontal" Loading="@InitLoading">
            <ChildContent Context="item">
                <ListItem Style="padding: 2px 0;">
                    <ListItemMeta>
                        <TitleTemplate>
                            <span>
                                <a @onclick="() => GoToProfilePage(item.Player.Id)">
                                    <img class="player-img" src="@_fileService.GetImagePath(item.Player.Picture)" />
                                </a>
                            </span>

                            <span>
                                <a style="display: inline-grid" @onclick="() => GoToProfilePage(item.Player.Id)">
                                    <span>
                                        @item.Player.FullName
                                        @if (item.Player.IsGk)
                                        {
                                            <span>
                                                (GK)
                                            </span>
                                        }
                                    </span>
                                    <span style="font-size: smaller"> @item.Team.Name </span>
                                </a>
                            </span>
                        </TitleTemplate>
                    </ListItemMeta>
                    <div>@item?.TotalPoints <Icon Type="star" Theme="fill" /></div>
                </ListItem>
            </ChildContent>
        </AntList>
    }

    @if (isOverallLeague)
    {
        <Divider Style="margin-top: 0px;margin-bottom: 12px;" />
        <span style="color:red;">*</span> <span style="font-style: italic; font-size: small"> Fantazi bodovi u zajedničkoj ligi se množe sa koeficijnom lige u kojoj su bodovi ostvarni</span>
    }


</Spin>


<style>
    .klasa {
        background-image: url("./teren4.jpg");
        background-size: cover;
        background-position: center;
    }
</style>

@code {
    private List<PlayerStatsDto> stats = new();
    private List<PlayerStatsDto> statsSub = new();
    private List<LeagueDto> leagues = new();
    public bool InitLoading { get; set; } = true;
    public bool Loading { get; set; } = false;
    public int count = 6;
    public int multiple = 1;
    int defaultLeagueId;
    private bool loading;
    private bool isOverallLeague = true;


    protected override async Task OnParametersSetAsync()
    {
        loading = true;
        var result = await Server.Leagues.Get();
        leagues = result.ToList();
        var resStats = await Server.Players.GetDreamTeamOverall();
        stats = resStats.ToList();
        var resStatsSub = await Server.Players.Get2ndDreamTeamOverall();
        statsSub = resStatsSub.ToList();
        defaultLeagueId = leagues.FirstOrDefault(x => x.IsOverallLeague) is not null ?
                       leagues.FirstOrDefault(x => x.IsOverallLeague).Id :
                       leagues.FirstOrDefault().Id;//leagues.FirstOrDefault().Id;
        isOverallLeague = leagues.FirstOrDefault(x => x.IsOverallLeague) is not null ? true : false;
        InitLoading = false;
        loading = false;
    }

    public async Task OnLoadMore()
    {
        Loading = true;
        var resStats = await Server.Players.GetDreamTeamOverall();
        stats.AddRange(resStats.Take(6).ToList());
        Loading = false;
    }

    private void GoToProfilePage(int id)
    {
        Navigation.NavigateTo($"/playerProfile/{id}");
    }

    private async Task OnSelectedLeague(LeagueDto league)
    {
        if (league is null) return;

        loading = true;
        List<PlayerStatsDto> resStats = new();
        if (league.IsOverallLeague)
        {
            var res = await Server.Players.GetDreamTeamOverall();
            stats = res.ToList();
            var resSub = await Server.Players.Get2ndDreamTeamOverall();
            statsSub = resSub.ToList();
            isOverallLeague = true;
        }
        else
        {
            var res = await Server.Players.GetDreamTeamByLeague(league.Id);
            stats = res.ToList();
            var resSub = await Server.Players.Get2ndDreamTeamByLeague(league.Id);
            statsSub = resSub.ToList();
            isOverallLeague = false;
        }

        //stats = resStats.ToList();
        StateHasChanged();
        loading = false;
    }
}
